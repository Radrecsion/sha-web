"""Initial migration

Revision ID: f15cb096d61a
Revises: 4ae84797d061
Create Date: 2025-09-03 22:39:54.388587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f15cb096d61a'
down_revision: Union[str, Sequence[str], None] = '4ae84797d061'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mechanism', sa.String(), nullable=False),
    sa.Column('min_mag', sa.Float(), nullable=True),
    sa.Column('max_mag', sa.Float(), nullable=True),
    sa.Column('coords_up', sa.JSON(), nullable=True),
    sa.Column('coords_down', sa.JSON(), nullable=True),
    sa.Column('gr_beta', sa.Float(), nullable=True),
    sa.Column('gr_rate', sa.Float(), nullable=True),
    sa.Column('gr_weight', sa.Float(), nullable=True),
    sa.Column('dip_angle', sa.Float(), nullable=True),
    sa.Column('strike_angle', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datasources_id'), 'datasources', ['id'], unique=False)
    op.create_table('gmpe_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('site_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gmpe_models_id'), 'gmpe_models', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('datasource_gmpe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datasource_id', sa.Integer(), nullable=True),
    sa.Column('gmpe_name', sa.String(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['datasource_id'], ['datasources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_datasource_gmpe_id'), 'datasource_gmpe', ['id'], unique=False)
    op.create_table('gmpe_coeffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gmpe_id', sa.Integer(), nullable=True),
    sa.Column('period', sa.Float(), nullable=False),
    sa.Column('coeffs', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['gmpe_id'], ['gmpe_models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gmpe_coeffs_id'), 'gmpe_coeffs', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('output', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_results_id'), 'results', ['id'], unique=False)
    op.create_table('site_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('vs30', sa.Float(), nullable=True),
    sa.Column('z1p0', sa.Float(), nullable=True),
    sa.Column('z2p5', sa.Float(), nullable=True),
    sa.Column('site_name', sa.String(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_site_parameters_id'), 'site_parameters', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_site_parameters_id'), table_name='site_parameters')
    op.drop_table('site_parameters')
    op.drop_index(op.f('ix_results_id'), table_name='results')
    op.drop_table('results')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_gmpe_coeffs_id'), table_name='gmpe_coeffs')
    op.drop_table('gmpe_coeffs')
    op.drop_index(op.f('ix_datasource_gmpe_id'), table_name='datasource_gmpe')
    op.drop_table('datasource_gmpe')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_gmpe_models_id'), table_name='gmpe_models')
    op.drop_table('gmpe_models')
    op.drop_index(op.f('ix_datasources_id'), table_name='datasources')
    op.drop_table('datasources')
    # ### end Alembic commands ###
